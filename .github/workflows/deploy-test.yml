name: Deploy to Test Environment

on:
  push:
    branches: [test]

env:
  REGISTRY: docker.io
  FRONTEND_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/wowperf-frontend
  BACKEND_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/wowperf-backend

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: ENV_TEST
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: ${{ env.FRONTEND_IMAGE }}:test
          target: production # Specify the stage to use
          cache-from: type=registry,ref=${{ env.FRONTEND_IMAGE }}:test
          cache-to: type=inline

      - name: Build and push backend
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ${{ env.BACKEND_IMAGE }}:test
          target: production # Specify the stage to use
          cache-from: type=registry,ref=${{ env.BACKEND_IMAGE }}:test
          cache-to: type=inline

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: ENV_TEST
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          echo "${{ vars.ENV_TEST }}" > deploy/test/.env
          echo "DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}" >> deploy/test/.env

      - name: Copy files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "deploy/test/*"
          target: "/home/tirrano/wowperf"
          strip_components: 2

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/tirrano/wowperf
            mkdir -p traefik/acme
            touch traefik/acme/acme.json
            chmod 600 traefik/acme/acme.json
            docker compose pull
            docker compose down --remove-orphans
            docker compose up -d
